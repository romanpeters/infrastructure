server {
    listen 443 ssl;
    server_name {{ service_name }}.{{ domain }} {% for a in service_alias %}{{ a }}.{{ domain }}{% if not loop.last %} {% endif %}{% endfor %};

    ssl_certificate /etc/letsencrypt/live/{{ domain }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ domain }}/privkey.pem;

    location / {
{% if service_alias %}
        if ($host != '{{ service_name }}.{{ domain }}') {
            return 301 https://{{ service_name }}.{{ domain }}$request_uri;
        }
{% endif %}

        proxy_pass {{ 'https' if service_ssl is defined and service_ssl else 'http' }}://{{ service_ip | default("127.0.0.1") }}:{{ service_port }};
{% if service_ssl is defined and service_ssl %}
        proxy_ssl_verify off;
{% endif %}
{% if service_name == 'ebooks' %}
        {{ lookup('file', 'files/ebooks.romanpeters.nl') }}
{% else %}
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
{% endif %}
    }

    location @custom_502 {
        add_header Content-Type text/plain;
        return 502 "Upstream failed: $upstream_addr\n";
    }
}
