---
- name: Ensure Python dependencies
  ansible.builtin.pip:
    name:
      - requests
      - docker==6.1.3
      - docker-compose

- name: Clone Docker Compose Git Repository to /srv/git
  ansible.builtin.git:
    repo: https://github.com/romanpeters/infrastructure_docker
    dest: /srv/git/infrastructure_docker
    version: main

- name: Delete existing index.yml if it exists
  ansible.builtin.file:
    path: /tmp/index.yml
    state: absent
  changed_when: false

- name: Fetch remote variable file
  ansible.builtin.fetch:
    src: /srv/git/infrastructure_docker/index.yml
    dest: /tmp/
    flat: true

- name: Load docker compose variables from index.yml
  ansible.builtin.include_vars:
    file: /tmp/index.yml

- name: Assert all items from docker_services are defined in infrastructure_docker
  ansible.builtin.assert:
    that:
      - item in (infrastructure_docker | map(attribute='name') | list) or item in (infrastructure_docker | map(attribute='path') | list)
    fail_msg: Service '{{ item }}' not found in infrastructure_docker.
  loop: "{{ docker_services }}"

- name: Filter docker compose variables based on docker_services
  ansible.builtin.set_fact:
    enabled_docker_services: >
      {{ infrastructure_docker | selectattr('name', 'in', docker_services) | list +
         infrastructure_docker | selectattr('path', 'in', docker_services) | list
         | unique }}

- name: Copy infrastructure_docker files
  ansible.builtin.copy:
    src: /srv/git/infrastructure_docker/{{ item.path }}/
    dest: /srv/docker/{{ item.name }}/
    remote_src: true
    owner: "{{ username }}"
    group: "{{ username }}"
  loop: "{{ enabled_docker_services }}"

- name: Start docker containers
  community.docker.docker_compose_v2:
    project_src: /srv/docker/{{ item.name }}
    state: present
  loop: "{{ enabled_docker_services }}"

- name: Add service
  ansible.builtin.include_role:
    name: service
  vars:
    service_ip: "{{ ansible_default_ipv4.address }}"
    service_name: "{{ item.name }}"
    service_port: "{{ item.port }}"
    service_remote: "{{ false }}" # TODO fix
    service_alias: "{{ [] }}"
  loop: "{{ enabled_docker_services }}"
