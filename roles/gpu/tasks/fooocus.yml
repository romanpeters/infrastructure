---
- name: Set dynamic variables
  ansible.builtin.set_fact:
    service_name: fooocus
    service_port: 7865
    service_ip: "{{ ansible_host }}"
    service_alias: []
    service_remote: false

- name: Set service_dir
  ansible.builtin.set_fact:
    service_dir: "/home/{{ username }}/ai/{{ service_name }}"

- name: Clone Fooocus repository
  become: yes
  become_user: "{{ username }}"
  ansible.builtin.git:
    repo: https://github.com/lllyasviel/Fooocus.git
    dest: "{{ service_dir }}"
    update: no
    force: yes
  notify: restart fooocus

- name: Create /models/{{ service_name }} directory
  file:
    path: /models/{{ service_name }}
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: "0755"
  notify: restart fooocus

- name: Check if {{ service_dir }}/models is a symlink
  ansible.builtin.stat:
    path: "{{ service_dir }}/models"
    follow: false
  register: models_stat

- name: Copy contents of {{ service_dir }}/models/
  copy:
    src: "{{ service_dir }}/models/"
    dest: /models/{{ service_name }}/
    owner: "{{ username }}"
    group: "{{ username }}"
    remote_src: true
  when: models_stat.stat.exists and not models_stat.stat.islnk
  notify: restart fooocus

- name: Remove {{ service_dir }}/models if it exists and is not a symlink
  ansible.builtin.file:
    path: "{{ service_dir }}/models"
    state: absent
  when: models_stat.stat.exists and not models_stat.stat.islnk
  notify: restart fooocus

- name: Create models symlink
  ansible.builtin.file:
    src: /models/{{ service_name }}
    dest: "{{ service_dir }}/models"
    state: link
  notify: restart fooocus

- name: Set up Python virtual environment
  become: yes
  become_user: "{{ username }}"
  command:
    cmd: python3 -m venv {{ service_dir }}/fooocus_env
    creates: "{{ service_dir }}/fooocus_env/bin/activate"
  notify: restart fooocus

- name: Install Python dependencies from requirements_versions.txt
  become: yes
  become_user: "{{ username }}"
  pip:
    requirements: "{{ service_dir }}/requirements_versions.txt"
    executable: "{{ service_dir }}/fooocus_env/bin/pip"
  notify: restart fooocus

- name: Append homer_item template to config.yml
  ansible.builtin.blockinfile:
    marker: "# {mark} ANSIBLE MANAGED BLOCK {{ service_name }}"
    state: present
    insertafter: EOF
    path: /home/{{ username }}/docker/ai/assets/config.yml
    block: "{{ lookup('template', 'templates/homer/item.yml.j2') }}"
  vars:
    service_name: Fooocus
  notify: restart homer

- name: Copy systemd unit file
  template:
    src: systemd/{{ service_name }}.service.j2
    dest: /etc/systemd/system/{{ service_name }}.service
    mode: 0644
  notify: restart fooocus

- include_role: 
    name: add_service
